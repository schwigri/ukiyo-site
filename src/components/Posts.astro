---
import { Lang, getLangFromUrl, getT } from '~/lib/i18n';
import { getCollection, getEntry } from 'astro:content';
import dayjs from 'dayjs';
import localizedFormat from 'dayjs/plugin/localizedFormat';
import timezone from 'dayjs/plugin/timezone';
import utc from 'dayjs/plugin/utc';
import 'dayjs/locale/de-ch';
import 'dayjs/locale/en';
import 'dayjs/locale/ja';

dayjs.extend(utc);
dayjs.extend(timezone);
dayjs.extend(localizedFormat);

const lang = getLangFromUrl(Astro.url);
const posts = await getCollection('posts', ({ slug }) => slug.startsWith(lang));
const postsData = await getEntry('data', 'posts');

const tzLocales = {
	[Lang.English]: 'en',
	[Lang.German]: 'de-ch',
	[Lang.Japanese]: 'ja',
} as const;

const t = getT(lang);
---

{posts.length ? (
	<ul class="[ grid grid-cols-1 gap-m wrapper ] [ list-none m-0 p-0 ] [ md:grid-cols-2 ]" role="list">
		{posts.map((post) => {
			const postData = postsData.data.posts[post.id];
			if (!postData) {
				throw new Error(`missing data for post ${post.id}`);
			}

			const publishedDate = dayjs(postData.published)
				.tz('America/Los_Angeles')
				.locale(tzLocales[lang])
				.format('LL');

			return (
				<li>
					<span>{publishedDate}</span>
					<span>{post.data.title}</span>
					<code>{JSON.stringify(postData)}</code>
				</li>
			);
		})}
	</ul>
) : (
	<p>{t`No posts yet.`}</p>
)}
